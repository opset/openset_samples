aggregate: # define our output columns
    count person
    count product_name as purchased
    sum product_price as total_revenue

# STEP 1
# search for a purchase events
match where action == 'purchase':
    # store the order_id
    first_order_id = order_id

    # products will hold the product names that
    # were purchased in STEP 1
    products = set()

    # STEP 2
    # gather the product names in the subsequent
    # 'cart_item' rows that have the same order_id
    # as the above match
    match where action == 'cart_item' and
            order_id == first_order_id:
        products.add(product_name)

    # STEP 3
    # find the NEXT purchase
    match 1 where action == 'purchase' and
        order_id != first_order_id: # match one

        # store this subsequent
        subsequent_order_id = order_id

        # STEP 4
        # for each 'cart_item' row
        # iterate the products capture in
        # Step 2 with the product_name in the row
        match where action == 'cart_item' and
                order_id == subsequent_order_id:

            for product in products:
                # Tally counts for
                # sub-sequent product name under name
                # under product_name in this row
                if product == product_name:
                    continue

                tally(product, product_name)

    # loop to top
